VHDL Code:
entity FS_BV is
 Port ( A : in STD_LOGIC;
 B : in STD_LOGIC;
 C : in STD_LOGIC;
 D : out STD_LOGIC;
 X : out STD_LOGIC);
end FS_BV;
architecture Behavioral of FS_BV is
begin
process(A,B,C)
begin
if(A='0') then
if(B=C) then
D<='0';
else
D<='1';
end if;
if(B='0' and C='0') then
X<='0';
else
X<='1';
end if;
else
if(B=C) then
D<='1';
else
D<='0';
end if;
if(B='1' and C='1') then
X<='1';
else
X<='0';
end if;
end if;
end process;
end Behavioral;

TBW Code:
entity FS_tbw is
-- Port ( );
end FS_tbw;
architecture Behavioral of FS_tbw is
component FS_BV is
 Port ( A : in STD_LOGIC;
 B : in STD_LOGIC;
 C : in STD_LOGIC;
 D : out STD_LOGIC;
 X : out STD_LOGIC);
end component;
signal A1 : STD_LOGIC :='0';
signal B1 : STD_LOGIC :='0';
signal C1 : STD_LOGIC :='0';
signal D1 : STD_LOGIC;
signal X1 : STD_LOGIC;
begin
uut : FS_BV port map (A=>A1, B=>B1, C=>C1, D=>D1, X=>X1);
stim_proc: process
begin
wait for 90 ns;
A1 <= '0';
B1 <= '0';
C1 <= '0';
wait for 90 ns;
A1 <= '0';
B1 <= '0';
C1 <= '1';
wait for 90 ns;
A1 <= '0';
B1 <= '1';
C1 <= '0';
wait for 90 ns;
A1 <= '0';
B1 <= '1';
C1 <= '1';
wait for 90 ns;
120 | P a g e
A1 <= '1';
B1 <= '0';
C1 <= '0';
wait for 90 ns;
A1 <= '1';
B1 <= '0';
C1 <= '1';
wait for 90 ns;
A1 <= '1';
B1 <= '1';
C1 <= '0';
wait for 90 ns;
A1 <= '1';
B1 <= '1';
C1 <= '1';
wait;
end process;
end Behavioral;